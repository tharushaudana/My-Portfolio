@import "tailwindcss";

@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
    --matrix-green: #29c53d;
}

::selection {
    background: var(--matrix-green);
    color: #0d1117;
}

body {
    font-family: var(--font-inter), sans-serif; /* Use CSS variable from next/font */
    background-color: #0d1117;
    color: #c9d1d9;
    background-image: linear-gradient(rgba(13, 17, 23, 0.97), rgba(13, 17, 23, 0.97)),
        repeating-linear-gradient(0deg, #161b22, #161b22 1px, transparent 1px, transparent 4px),
        repeating-linear-gradient(90deg, #161b22, #161b22 1px, transparent 1px, transparent 4px);
    background-size: 100% 100%, 40px 40px, 40px 40px;
}

.scanlines {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    background: repeating-linear-gradient(to bottom, transparent 0%, transparent 50%, rgba(0, 0, 0, 0.2) 50%, rgba(0, 0, 0, 0.2) 100%);
    background-size: 100% 4px;
    z-index: 9999;
    opacity: 0.2;
}

.font-fira {
    font-family: var(--font-fira-code), monospace; /* Use CSS variable from next/font */
}

.glass-card {
    background: rgba(13, 17, 23, 0.85);
    -webkit-backdrop-filter: blur(10px);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(48, 54, 61, 0.5);
}

@supports not ((-webkit-backdrop-filter: none) or (backdrop-filter: none)) {
    .glass-card {
        background: rgba(13, 17, 23, 0.95);
    }
}

.project-card-bg {
    background-color: rgba(22, 27, 34, 0.85);
    border: 1px solid var(--matrix-green);
}

.project-card {
    transition: transform 0.3s ease;
    position: relative;
    z-index: 1;
    will-change: transform;
}

.project-card::after {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    border-radius: 0.6rem;
    box-shadow: 0 0 20px 0px rgba(41, 197, 61, 0.5);
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: -1;
    will-change: opacity;
}

.project-card:hover {
    transform: translateY(-8px);
}

.project-card:hover::after {
    opacity: 1;
}

.skill-tag {
    background-color: #21262d;
    border: 1px solid #30363d;
    color: #8892b0;
    transition: transform 0.3s ease, color 0.3s ease, background-color 0.3s ease;
}

.skill-tag:hover {
    background-color: #30363d;
    color: var(--matrix-green);
    transform: translateY(-3px);
}

.section-title-wrapper {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.5s, transform 0.5s;
}

.section-title-wrapper.visible {
    opacity: 1;
    transform: translateY(0);
}

.section-title {
    position: relative;
    display: inline-block;
    padding-bottom: 0.5rem;
    margin-bottom: 2rem;
    font-size: 2.25rem;
    font-weight: 700;
    color: #f0f6fc;
    font-family: var(--font-fira-code), monospace; /* Use CSS variable */
}

.section-title::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0%;
    height: 4px;
    background: linear-gradient(90deg, var(--matrix-green), #30363d);
    border-radius: 2px;
    transition: width 0.5s ease-in-out;
}

.section-title.animated::after {
    width: 50%;
}

.timeline::before {
    content: '';
    position: absolute;
    left: 1rem;
    top: 0;
    bottom: 0;
    width: 2px;
    background-color: #30363d;
}

.timeline-item::before {
    content: '';
    position: absolute;
    left: -0.5rem;
    top: 0.5rem;
    width: 1.25rem;
    height: 1.25rem;
    background-color: var(--matrix-green);
    border: 4px solid #0d1117;
    border-radius: 50%;
    z-index: 1;
}

.animated-element {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
    will-change: opacity, transform;
}

.animated-element.visible {
    opacity: 1;
    transform: translateY(0);
}

.glowing-border {
    border: 2px solid transparent;
    transition: border-color 0.3s ease;
}

.glowing-border:hover {
    border-color: var(--matrix-green);
}

@keyframes float {
    0%,
    100% {
        transform: translateY(0px);
    }
    50% {
        transform: translateY(-10px);
    }
}

.contact-input {
    background-color: #21262d;
    border: 1px solid #30363d;
    color: #c9d1d9;
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

.contact-input:focus {
    outline: none;
    border-color: var(--matrix-green);
    box-shadow: 0 0 0 3px rgba(41, 197, 61, 0.2);
}

.btn-primary {
    background-color: transparent;
    border: 2px solid var(--matrix-green);
    color: var(--matrix-green);
    transition: all 0.3s;
}

.btn-primary:hover {
    background-color: var(--matrix-green);
    color: #0d1117;
    box-shadow: 0 0 15px var(--matrix-green);
}

.cursor {
    display: inline-block;
    background-color: var(--matrix-green);
    width: 10px;
    animation: blink 1s infinite;
    margin-left: 4px;
    vertical-align: middle;
}

.typewriter-text .cursor {
    height: 1.5rem;
}

.section-title .cursor {
    height: 2rem;
}

@keyframes blink {
    50% {
        opacity: 0;
    }
}

.prompt>span {
    color: var(--matrix-green);
}

.prompt {
    color: #8892b0;
}

.glitch-text {
    position: relative;
    color: #f0f6fc;
    text-shadow: 0 0 8px rgba(41, 197, 61, 0.6);
    font-weight: 700;
}

.glitch-text.glitch-active::before,
.glitch-text.glitch-active::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #0d1117;
    overflow: hidden;
}

.glitch-text.glitch-active::before {
    left: 2px;
    text-shadow: -2px 0 #ff00c1;
    animation: glitch-anim-fast 2s infinite linear alternate-reverse;
}

.glitch-text.glitch-active::after {
    left: -2px;
    text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
    animation: glitch-anim-fast 1.5s infinite linear alternate-reverse;
}

@keyframes glitch-anim-fast {
    0% {
        clip-path: inset(15% 0 80% 0);
    }
    20% {
        clip-path: inset(90% 0 5% 0);
    }
    40% {
        clip-path: inset(45% 0 45% 0);
    }
    60% {
        clip-path: inset(10% 0 50% 0);
    }
    80% {
        clip-path: inset(70% 0 10% 0);
    }
    100% {
        clip-path: inset(30% 0 65% 0);
    }
}